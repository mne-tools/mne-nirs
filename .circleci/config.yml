# Tagging a commit with [circle front] will build the front page and perform tests-doc.
# Tagging a commit with [circle full] will build everything.
version: 2.1

_xvfb: &xvfb
  name: Start Xvfb virtual framebuffer
  command: |
    echo "export DISPLAY=:99" >> $BASH_ENV
    /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1280x1024x24 -ac +extension GLX +render -noreset -nolisten tcp -nolisten unix

jobs:
    build_docs:
      docker:
        # Use 18.04 rather than 20.04 because MESA 20.0.8 on 18.04 has working
        # transparency but 21.0.3 on 20.04 does not!
        - image: cimg/base:stable-18.04
      steps:
        - restore_cache:
            keys:
              - source-cache
        - checkout
        - run:
            name: Complete checkout
            command: |
              set -e
              if ! git remote -v | grep upstream; then
                git remote add upstream https://github.com/mne-tools/mne-nirs.git
              fi
              git remote set-url upstream https://github.com/mne-tools/mne-nirs.git
              git fetch upstream
        - save_cache:
            key: source-cache
            paths:
              - ".git"
        - run:
            name: Check-skip
            command: |
              set -e
              export COMMIT_MESSAGE=$(git log --format=oneline -n 1);
              if [[ -v CIRCLE_PULL_REQUEST ]] && ([[ "$COMMIT_MESSAGE" == *"[skip circle]"* ]] || [[ "$COMMIT_MESSAGE" == *"[circle skip]"* ]]); then
                echo "Skip detected, exiting job ${CIRCLE_JOB} for PR ${CIRCLE_PULL_REQUEST}."
                circleci-agent step halt;
              fi
        - run:
            name: Merge with upstream
            command: |
              echo $(git log -1 --pretty=%B) | tee gitlog.txt
              echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
              if [[ $(cat merge.txt) != "" ]]; then
                echo "Merging $(cat merge.txt)";
                git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
              fi

        - run:
            name: Set BASH_ENV
            command: |
              set -e
              sudo apt update -qq
              sudo apt install -qq libosmesa6 libglx-mesa0 libopengl0 libglx0 libdbus-1-3 \
                libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 \
                libxcb-render-util0 libxcb-shape0 libxcb-xfixes0 libxcb-xinerama0 \
                graphviz optipng \
                python3.8-venv python3-venv \
                xvfb libxft2 ffmpeg
              python3.8 -m venv ~/python_env
              echo "set -e" >> $BASH_ENV
              echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV
              echo "export XDG_RUNTIME_DIR=/tmp/runtime-circleci" >> $BASH_ENV
              echo "export MNE_FULL_DATE=true" >> $BASH_ENV
              echo "export PATH=~/.local/bin/:$PATH" >> $BASH_ENV
              echo "source ~/python_env/bin/activate" >> $BASH_ENV
              mkdir -p ~/.local/bin
              ln -s ~/python_env/bin/python ~/.local/bin/python
              echo "BASH_ENV:"
              cat $BASH_ENV
              mkdir -p ~/mne_data
              touch pattern.txt

        - run:
            <<: *xvfb

        # Load pip cache
        - restore_cache:
            keys:
              - pip-cache-0
        - restore_cache:
            keys:
              - user-install-bin-cache-0

        # Hack in uninstalls of libraries as necessary if pip doesn't do the right thing in upgrading for us...
        - run:
            name: Get Python running
            command: |
              ./tools/circleci_dependencies.sh

        - save_cache:
            key: pip-cache-0
            paths:
              - ~/.cache/pip
        - save_cache:
            key: user-install-bin-cache-0
            paths:
              - ~/.local/lib/python3.8/site-packages
              - ~/.local/bin

        - run:
            name: Download fOLD data
            command: |
              ./tools/fold.sh

        - run:
            name: Check PyQt5
            command: LD_DEBUG=libs python -c "from PyQt5.QtWidgets import QApplication, QWidget; app = QApplication([])"

        # Look at what we have and fail early if there is some library conflict
        # (remove irrelevant lines compared to MNE-Python)
        - run:
            name: Check installation
            command: |
               which python
               QT_DEBUG_PLUGINS=1 mne sys_info
               python -c "import numpy; numpy.show_config()"
               LIBGL_DEBUG=verbose python -c "import pyvistaqt; pyvistaqt.BackgroundPlotter(show=True)"
               python -c "import mne; mne.set_config('MNE_USE_CUDA', 'false')"  # this is needed for the config tutorial
               python -c "import mne; mne.set_config('MNE_LOGGING_LEVEL', 'info')"
               python -c "import mne; level = mne.get_config('MNE_LOGGING_LEVEL'); assert level.lower() == 'info', repr(level)"
        - run:
            name: List packages
            command: python -m pip list

        # Restore data cache
        - restore_cache:
            keys:
              - data-cache-2

        - run:
            name: list packages
            command: |
               pip list

        - run:
            name: Download data
            command: |
              ./tools/github_actions_download.sh

        # Build docs
        - run:
            name: make html
            command: |
              git branch
              make -C doc html
              du -hs ~/mne_data

        # Save the JUnit file
        - store_test_results:
            path: doc/_build/test-results
        - store_artifacts:
            path: doc/_build/test-results
            destination: test-results
        # Save the HTML
        - store_artifacts:
            path: doc/_build/html/
            destination: html
        - persist_to_workspace:
            root: doc/_build
            paths:
              - html
        # Cache the data
        - save_cache:
            key: data-cache-2
            paths:
              - ~/.mne
              - ~/mne_data

    deploy:
      machine:
        image: ubuntu-2004:202111-01
      steps:
        - add_ssh_keys:
            fingerprints:
              - "52:15:5b:e8:77:af:33:18:74:4e:ae:44:c4:8e:61:e5"
        - attach_workspace:
            at: /tmp/build
        - checkout
        - run:
            name: Set BASH_ENV
            command: |
              set -e
              echo "set -e" >> $BASH_ENV
        # Don't try to deploy if nothing is there or not on the right branch
        - run:
            name: Check docs
            command: |
              if [ ! -f /tmp/build/html/index.html ] ; then
                echo "No files found to upload (build: ${CIRCLE_BRANCH}).";
                circleci-agent step halt;
              fi;
        - run:
            name: Deploy docs
            command: |
              git config --global user.email "circle@mne.tools";
              git config --global user.name "Circle CI";
              git checkout -b gh-pages origin/gh-pages
              git remote -v
              git fetch origin
              git reset --hard origin/gh-pages
              git clean -xdf
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
                rm -Rf dev;
                cp -a /tmp/build/html dev;
                git add -A;
                git commit -m "CircleCI update of dev docs (${CIRCLE_BUILD_NUM}) [ci skip].";
              else
                echo "Deploying stable docs for ${CIRCLE_BRANCH}.";
                rm -Rf stable;
                cp -a /tmp/build/html stable;
                git add -A;
                git commit -m "CircleCI update of stable docs (${CIRCLE_BUILD_NUM}) [ci skip].";
              fi;
              git push origin gh-pages;

workflows:
  version: 2

  default:
    jobs:
      - build_docs
      - deploy:
          requires:
            - build_docs
          filters:
            branches:
              only:
                - main
                - maint/0.5
