
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/general/plot_19_snirf.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_general_plot_19_snirf.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_general_plot_19_snirf.py:


.. _tut-fnirs-snirf:

SNIRF Support in MNE
====================

.. sidebar:: .nirs files

   MNE does not support reading ``.nirs`` files. If you have ``.nirs`` files that
   you would like to process in MNE, you should first convert them to SNIRF.
   To convert ``.nirs`` files to SNIRF you can use the Homer3 ``Nirs2Snirf``
   function. See https://github.com/fNIRS/snirf_homer3

SNIRF is a file format for storing functional near-infrared spectroscopy (fNIRS)
data. The specification is maintained by the society for functional near infrared
spectroscopy.

MNE Python and MNE-NIRS can be used to read and write SNIRF files respectively.
In this tutorial we demonstrate how to convert your MNE data to
SNIRF and write it to disk and also how to read SNIRF files. We also demonstrate how to validate
that a SNIRF file conforms to the SNIRF specification.

You can read the SNIRF protocol at the official site https://github.com/fNIRS/snirf.

.. contents:: Page contents
   :local:
   :depth: 2

.. GENERATED FROM PYTHON SOURCE LINES 30-46

.. code-block:: Python



    # Authors: Robert Luke <mail@robertluke.net>
    #
    # License: BSD (3-clause)

    import os
    import mne
    import snirf

    from mne.io import read_raw_nirx, read_raw_snirf
    from mne.preprocessing.nirs import optical_density, beer_lambert_law
    from mne_nirs.io import write_raw_snirf
    from numpy.testing import assert_allclose









.. GENERATED FROM PYTHON SOURCE LINES 47-51

Import raw NIRS data from vendor
--------------------------------

First we import some example data recorded with a NIRX device.

.. GENERATED FROM PYTHON SOURCE LINES 51-58

.. code-block:: Python



    fnirs_data_folder = mne.datasets.fnirs_motor.data_path()
    fnirs_raw_dir = os.path.join(fnirs_data_folder, 'Participant-1')
    raw_intensity = read_raw_nirx(fnirs_raw_dir).load_data()









.. GENERATED FROM PYTHON SOURCE LINES 59-63

Write data as SNIRF
-------------------

Now we can write this data back to disk in the SNIRF format.

.. GENERATED FROM PYTHON SOURCE LINES 63-67

.. code-block:: Python


    write_raw_snirf(raw_intensity, 'test_raw.snirf')









.. GENERATED FROM PYTHON SOURCE LINES 68-72

Read back SNIRF file
--------------------

Next we can read back the snirf file.

.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: Python


    snirf_intensity = read_raw_snirf('test_raw.snirf')









.. GENERATED FROM PYTHON SOURCE LINES 77-82

Compare files
-------------

Finally we can compare the data of the original to the SNIRF format and
ensure that the values are the same.

.. GENERATED FROM PYTHON SOURCE LINES 82-88

.. code-block:: Python


    assert_allclose(raw_intensity.get_data(), snirf_intensity.get_data())

    snirf_intensity.plot(n_channels=30, duration=300, show_scrollbars=False)





.. image-sg:: /auto_examples/general/images/sphx_glr_plot_19_snirf_001.png
   :alt: Raw plot
   :srcset: /auto_examples/general/images/sphx_glr_plot_19_snirf_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <mne_qt_browser._pg_figure.MNEQtBrowser(0x0) at 0x7ff2a8e2a2c0>



.. GENERATED FROM PYTHON SOURCE LINES 89-97

Validate SNIRF File
-------------------

To validate that a file complies with the SNIRF standard you should use the
official SNIRF validator from the Boston University Neurophotonics Center
called ``snirf``. Detailed instructions for this program can be found at
https://github.com/BUNPC/pysnirf2. Below we demonstrate that the files created
by MNE-NIRS are compliant with the specification.

.. GENERATED FROM PYTHON SOURCE LINES 97-103

.. code-block:: Python


    result = snirf.validateSnirf('test_raw.snirf')
    assert result.is_valid()
    result.display()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <snirf.pysnirf2.ValidationResult object at 0x7ff280a57b50>

    Found 304 OK      (hidden)
    Found 522 INFO    (hidden)
    Found 0 WARNING
    Found 0 FATAL  

    File is VALID




.. GENERATED FROM PYTHON SOURCE LINES 104-108

Optical Density
-------------------

MNE-NIRS cal also be used to write optical density data to SNIRF files.

.. GENERATED FROM PYTHON SOURCE LINES 108-117

.. code-block:: Python


    raw_od = optical_density(raw_intensity)
    write_raw_snirf(raw_od, 'test_raw_od.snirf')

    result = snirf.validateSnirf('test_raw_od.snirf')
    assert result.is_valid()
    result.display()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <snirf.pysnirf2.ValidationResult object at 0x7ff280750550>

    Found 360 OK      (hidden)
    Found 466 INFO    (hidden)
    Found 0 WARNING
    Found 0 FATAL  

    File is VALID




.. GENERATED FROM PYTHON SOURCE LINES 118-122

Haemoglobin
-------------------

And it can write valid haemoglobin data to SNIRF files.

.. GENERATED FROM PYTHON SOURCE LINES 122-129

.. code-block:: Python


    raw_hb = beer_lambert_law(raw_od)
    write_raw_snirf(raw_hb, 'test_raw_hb.snirf')

    result = snirf.validateSnirf('test_raw_hb.snirf')
    assert result.is_valid()
    result.display()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <snirf.pysnirf2.ValidationResult object at 0x7ff2a8894700>

    Found 360 OK      (hidden)
    Found 466 INFO    (hidden)
    Found 0 WARNING
    Found 0 FATAL  

    File is VALID





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 7.592 seconds)

**Estimated memory usage:**  10 MB


.. _sphx_glr_download_auto_examples_general_plot_19_snirf.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/mne-tools/mne-nirs/gh-pages?filepath=stable/notebooks/auto_examples/general/plot_19_snirf.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_19_snirf.ipynb <plot_19_snirf.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_19_snirf.py <plot_19_snirf.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
