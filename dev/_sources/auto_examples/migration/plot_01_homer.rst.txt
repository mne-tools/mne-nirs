
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/migration/plot_01_homer.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_migration_plot_01_homer.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_migration_plot_01_homer.py:


.. _tut-migration-homer:

Migrating from Homer to MNE
===========================

This tutorial will demonstrate how to do convert a basic Homer script to MNE
and highlight differences and common issues you may encounter.

Homer2 is a MATLAB based software analysis package. https://homer-fnirs.org/

Homer3 is also a MATLAB based analysis package. https://github.com/BUNPC/Homer3


Basic Homer2 script to be reproduced in MNE
===========================================

Below is a common example analysis performed in Homer.
The NIRx data is converted to .nirs format.
Then the intensity signal is convert to optical density,
motion corrected using TDDR, and converted to haemoglobin concentration.


.. code-block:: matlab

   HomerOfflineConverter('~/mne_data/MNE-fNIRS-motor-data/Participant-1');
   load('file.nirs', '-mat');
   fs = 7.8125;
   dRange = [0.07 3];
   SNRthresh = 7;
   SDrange = [0 45];
   reset = 0;
   tIncMan = ones(size(s,1),1);
   dod = hmrIntensity2OD(d);
   SD = enPruneChannels(d,SD,tIncMan,dRange,SNRthresh,SDrange,reset);
   tddr = hmrMotionCorrectTDDR(dod,SD,fs);
   ppf = [6 6];
   dc = hmrOD2Conc(tddr,SD,ppf);

.. contents:: Page contents
   :local:
   :depth: 2

.. GENERATED FROM PYTHON SOURCE LINES 47-51

MNE equivalent of Homer script
==============================

First the necessary libraries and functions are imported.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    # Authors: Robert Luke <mail@robertluke.net>
    #
    # License: BSD (3-clause)

    import os
    import mne

    from mne.io import read_raw_nirx
    from mne.preprocessing.nirs import (optical_density, beer_lambert_law,
                                        temporal_derivative_distribution_repair)









.. GENERATED FROM PYTHON SOURCE LINES 65-70

Convert to optical density and motion correct
---------------------------------------------

First we load the data which simply involves pointing the load function
to the correct directory.

.. GENERATED FROM PYTHON SOURCE LINES 70-79

.. code-block:: default


    # First we obtain the path to the data
    fnirs_data_folder = mne.datasets.fnirs_motor.data_path()
    fnirs_raw_dir = os.path.join(fnirs_data_folder, 'Participant-1')

    # Next we read the data
    raw_intensity = read_raw_nirx(fnirs_raw_dir).load_data()









.. GENERATED FROM PYTHON SOURCE LINES 80-85

Convert signal to optical density and apply TDDR
------------------------------------------------

As with Homer we can convert the intensity data to optical density and
apply motion correction using the TDDR method.

.. GENERATED FROM PYTHON SOURCE LINES 85-90

.. code-block:: default


    raw_od = optical_density(raw_intensity)
    corrected_tddr = temporal_derivative_distribution_repair(raw_od)









.. GENERATED FROM PYTHON SOURCE LINES 91-99

Convert to haemoglobin concentration
------------------------------------

Next we convert the signal to changes in haemoglobin concentration.
MNE uses a different default value for the partial pathlength factor (ppf),
Homer uses a default value of ppf=6, whereas MNE uses ppf=0.1,
To exactly match the results from Homer we can manually set the ppf value to
6 in MNE.

.. GENERATED FROM PYTHON SOURCE LINES 99-103

.. code-block:: default


    raw_h = beer_lambert_law(corrected_tddr, ppf=6.)









.. GENERATED FROM PYTHON SOURCE LINES 104-113

Further analysis details
------------------------------------

Commonly this preprocessing is followed by an averaging analysis as described
in the :ref:`MNE fNIRS tutorial <mne:tut-fnirs-processing>`.
If there is useful processing in the Homer
that is not available in MNE
please let us know by creating an issue at
https://github.com/mne-tools/mne-nirs/issues


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.697 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_auto_examples_migration_plot_01_homer.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/mne-tools/mne-nirs/gh-pages?filepath=dev/notebooks/auto_examples/migration/plot_01_homer.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_01_homer.py <plot_01_homer.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_01_homer.ipynb <plot_01_homer.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
